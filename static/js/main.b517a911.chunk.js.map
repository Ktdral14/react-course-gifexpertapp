{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","categories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","type","value","onChange","target","getGifs","category","a","url","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAAoB,EACtBC,mBAAS,IADa,mBACnDC,EADmD,KACvCC,EADuC,KAY1D,OACI,0BAAMC,SANY,SAACC,GACnBA,EAAEC,iBACFN,EAAc,CAACE,GAAF,mBAAiBH,OAK1B,2BACIQ,KAAK,OACLC,MAAON,EACPO,SAdc,SAACJ,GACvBF,EAAcE,EAAEK,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCF,EADnC,+DAGIG,MAAMD,GAHV,cAGbE,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAI1CY,QAAQC,IAAIR,GAdO,kBAeZA,GAfY,4CAAH,sDCEPS,EAAc,SAAC,GAAqB,EAApBN,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IACpC,OACI,yBAAKe,UAAU,0CACX,yBAAKC,IAAKhB,EAAKiB,IAAKR,IACpB,2BAAIA,KCFHS,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZX,mBAAS,CAC/BiB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNzB,EAAQC,GAAUyB,MAAK,SAACb,GAAD,OACnBW,EAAS,CACLjB,KAAMM,EACNS,SAAS,SAGlB,CAACrB,IAEGsB,EDb2BI,CAAa1B,GAAjCY,EADuB,EAC7BN,KAAce,EADe,EACfA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAqCjB,GAClDqB,GACG,uBAAGJ,UAAU,oCAAb,eAEJ,yBAAKA,UAAU,aACVL,EAAOJ,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEXrCmB,EAAe,WAAO,IAAD,EACMvC,mBAAS,CAAC,4BADhB,mBACvBF,EADuB,KACXC,EADW,KAG9B,OACI,oCACI,4CACA,kBAAC,EAAD,CACID,WAAYA,EACZC,cAAeA,IAEnB,6BACA,4BACKD,EAAWqB,KAAI,SAACR,GAAD,OACZ,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,UCZlC6B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.b517a911.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ categories, setCategories }) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories([inputValue, ...categories]);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=n69DUv090JJmPFprxewqJve9EATPwCp2`;\r\n\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    console.log(gifs);\r\n    return gifs\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && (\r\n                <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n            )}\r\n            <div className=\"card-grid\">\r\n                {images.map((img) => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((images) =>\r\n            setState({\r\n                data: images,\r\n                loading: false,\r\n            })\r\n        );\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"Full Metal Alchemist   \"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory\r\n                categories={categories}\r\n                setCategories={setCategories}\r\n            />\r\n            <hr />\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <GifGrid \r\n                        key={category} \r\n                        category={category} \r\n                    />\r\n                ))}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}